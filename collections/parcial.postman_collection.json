{
	"info": {
		"_postman_id": "c73db8f4-bb2e-4d03-9a89-d784b9b52c21",
		"name": "parcial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24024572"
	},
	"item": [
		{
			"name": "clubs",
			"item": [
				{
					"name": "Create valid club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"club_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Club de Ejemplo\",\n  \"foundationDate\": \"2022-01-01\",\n  \"image\": \"https://ejemplo.com/imagen.jpg\",\n  \"description\": \"Un club para ejemplificar\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/clubs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create invalid club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The date must be in the past\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"foundationDate\": \"2022-01-01\",\n  \"image\": \"https://ejemplo.com/imagen.jpg\",\n  \"description\": \"Una descripción que supera el límite de 100 caracteres según las reglas de validación\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/clubs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain all clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of clubs > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain club by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain club by wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The club with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Club de ejemplo actualizado\",\n    \"foundationDate\": \"2022-01-01\",\n    \"image\": \"https://ejemplo.com/imagen.jpg\",\n    \"description\": \"Un club para ejemplificar\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update wrong club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The club with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Club de ejemplo actualizado\",\n    \"foundationDate\": \"2022-01-01\",\n    \"image\": \"https://ejemplo.com/imagen.jpg\",\n    \"description\": \"Un club para ejemplificar\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/clubs/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete wrong club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The club with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "members",
			"item": [
				{
					"name": "Create valid member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"member_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"UsuarioEjemplo\",\n  \"email\": \"usuario@example.com\",\n  \"birthdate\": \"1990-01-01\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/members",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create invalid member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The member code must be 3 characters long\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Usuario\", \n  \"email\": \"correoInvalido\", \n  \"birthdate\": \"1990-01-01\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/members",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain all members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of members > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/members",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain member by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/members/{{member_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain member by wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The member with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"NuevoNombreUsuario\",\n  \"email\": \"nuevoCorreo@example.com\",\n  \"birthdate\": \"1995-05-05\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/members/{{member_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update wrong member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The member with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"NuevoNombreUsuario\",\n  \"email\": \"nuevoCorreo@example.com\",\n  \"birthdate\": \"1995-05-05\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/members/{{member_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete wrong member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The member with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "clubs-members",
			"item": [
				{
					"name": "Create valid club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"club_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Club Social Harmony\",\n  \"foundationDate\": \"2000-06-15\",\n  \"image\": \"https://ejemplo.com/clubxyz.jpg\",\n  \"description\": \"Un club dedicado a la práctica de diversos deportes\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/clubs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"member_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"UsuarioValido123\",\n  \"email\": \"usuario@ejemplo.com\",\n  \"birthdate\": \"1990-05-15\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/members",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid member 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"member_id_2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"UsuarioValido123\",\n  \"email\": \"usuario@ejemplo.com\",\n  \"birthdate\": \"1990-05-15\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/members",
							"host": [
								"{{URL}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign member to club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"club_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/ae28da8e-01b8-4a93-aef1-65b990beff6d/members/27e080f8-32be-4abf-b3bd-e1705b7799c1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"ae28da8e-01b8-4a93-aef1-65b990beff6d",
								"members",
								"27e080f8-32be-4abf-b3bd-e1705b7799c1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign wrong member to club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The member with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Avianca\",\n    \"description\": \"Aerolinea con un bajo servicio a sus usuarios\",\n    \"date\": \"9/9/9999\",\n    \"website\": \"www.avianca.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain all members from clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of clubs > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}/members",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain member from clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}/members/{{member_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"{{member_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain member not linked to club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"   pm.response.to.have.status(412);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The member with the given id is not associated to the club\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}/members/{{member_id_2}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"{{member_id_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update members from club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{member_id}}\",\n        \"username\": \"UsuarioValido1234\",\n        \"email\": \"usuario@ejemplo.com\",\n        \"birthdate\": \"1990-05-15\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}/members/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update wrong members on club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The member with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"El Dorado\",\n        \"code\": \"A11\",\n        \"country\": \"Colombia\",\n        \"city\": \"Bogota\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}/members/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete member from club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}/members/{{member_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"{{member_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete member not linked to club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The member with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/clubs/{{club_id}}/members/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"clubs",
								"{{club_id}}",
								"members",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "localhost:3000/api/v1",
			"type": "string"
		}
	]
}